<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\obj\haier_sizhou.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\obj\haier_sizhou.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Thu Oct 11 20:20:37 2018
<BR><P>
<H3>Maximum Stack Usage =        344 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; MissionLoop &rArr; UpdateTelDat &rArr; no_derection_fly &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[dd]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[92]">delayus</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92]">delayus</a><BR>
 <LI><a href="#[3a]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[25]">CCM_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[20]">EUART0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[7]">HARDFAULT_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[23]">I2C0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[24]">I2C1_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[1b]">KINT_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[1d]">LCD_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[6]">NMI_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[9]">PENDSV_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[b]">PINT0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[c]">PINT1_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[d]">PINT2_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[e]">PINT3_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[f]">PINT4_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[10]">PINT5_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[11]">PINT6_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[12]">PINT7_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[28]">ReadAcc</a> from scu.o(.text) referenced from scu.o(.text)
 <LI><a href="#[29]">ReadGyro</a> from scu.o(.text) referenced from scu.o(.text)
 <LI><a href="#[27]">ReadTel</a> from scu.o(.text) referenced from scu.o(.text)
 <LI><a href="#[5]">Reset_Handler</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[21]">SPI0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[22]">SPI1_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[8]">SVC_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[a]">SYSTICK_HANDLER</a> from interrupt.o(.text) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[26]">SystemGPIOInit</a> from scu.o(.text) referenced from scu.o(.text)
 <LI><a href="#[2a]">SystemGetMirco</a> from scu.o(.text) referenced from scu.o(.text)
 <LI><a href="#[13]">T16N0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[14]">T16N1_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[15]">T16N2_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[16]">T16N3_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[17]">T32N0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[18]">T32N1_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[1a]">TRTC_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[19]">TWDT_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[1e]">UART0_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[1f]">UART1_HANDLER</a> from startup_hr8p506.o(INT) referenced from startup_hr8p506.o(RESET)
 <LI><a href="#[2c]">__main</a> from __main.o(!!!main) referenced from startup_hr8p506.o(INT)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[112]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[113]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[114]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[115]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[116]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[117]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[118]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[119]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[11a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[11b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[11c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[11d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[11e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[11f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[120]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[121]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[122]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[123]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[124]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[125]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[126]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[127]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[128]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[38]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[129]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[12a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[12b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[12c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[12d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[12e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[12f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[30]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[32]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[130]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[34]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MissionLoop &rArr; UpdateTelDat &rArr; no_derection_fly &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[131]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[df]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[37]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[132]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[39]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[a1]"></a>hw2181_iapop_words_program</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_iappa
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_init_250k
</UL>

<P><STRONG><a name="[133]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = main &rArr; MissionLoop &rArr; UpdateTelDat &rArr; no_derection_fly &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2181_uart_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_power_test
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_port_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_init_250k
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_scu_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_motor_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_interrupt_init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_adc_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_acc_dataread
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareInit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHalInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGPIOInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mpu6881Initial
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4e]"></a>sleep_key</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_READ
</UL>

<P><STRONG><a name="[4f]"></a>sleep</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_led_off
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_write
</UL>

<P><STRONG><a name="[3b]"></a>hr8p506_scu_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>hr8p506_led_on</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedFlash
</UL>

<P><STRONG><a name="[50]"></a>hr8p506_led_off</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedFlash
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[134]"></a>hw2181_t32n0_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, scu.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>hw2181_uart_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw2181_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>hw2181_uart_tx</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw2181_uart_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DT_Send_Senser
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_To_APP
</UL>

<P><STRONG><a name="[26]"></a>SystemGPIOInit</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemGPIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>GPIOA_READ</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_key
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>delay_ms</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_adc_init
</UL>

<P><STRONG><a name="[3f]"></a>hr8p506_adc_init</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hr8p506_adc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>hr8p506_adc_sample</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
</UL>

<P><STRONG><a name="[135]"></a>all_adc_read</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, scu.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>hr8p506_motor_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hr8p506_motor_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>close_pwm</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUpdateMotorPower
</UL>

<P><STRONG><a name="[90]"></a>open_pwm</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUpdateMotorPower
</UL>

<P><STRONG><a name="[54]"></a>hr8p506_i2c_read</STRONG> (Thumb, 464 bytes, Stack size 20 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hr8p506_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_calib_param
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGyro
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAcc
</UL>

<P><STRONG><a name="[51]"></a>hr8p506_i2c_write</STRONG> (Thumb, 246 bytes, Stack size 20 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hr8p506_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_start_pressure
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_start_temperature
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_start_continuous
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mpu6881Initial
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[44]"></a>Mpu6881Initial</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Mpu6881Initial &rArr; hr8p506_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>SystemGetMirco</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemGetMirco
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>send_tx</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = send_tx &rArr; hw2000_init_250k &rArr; hw2000_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_tx_data
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_init_250k
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTel
</UL>

<P><STRONG><a name="[3d]"></a>SystemHalInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>hr8p506_interrupt_init</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hr8p506_interrupt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_irq
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>pint3_handler</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pint3_handler &rArr; hw2000_rx_data &rArr; hw2000_read_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_data
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelDatCheck
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_irq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_irq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT3_HANDLER
</UL>

<P><STRONG><a name="[e8]"></a>pint4_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT4_HANDLER
</UL>

<P><STRONG><a name="[a]"></a>SYSTICK_HANDLER</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SYSTICK_HANDLER &rArr; hw2000_tx_data &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedFlash
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_tx_data
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>INT_UART0</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT_UART0
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_HANDLER
</UL>

<P><STRONG><a name="[66]"></a>no_derection_fly</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = no_derection_fly &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
</UL>

<P><STRONG><a name="[76]"></a>Data_To_APP</STRONG> (Thumb, 438 bytes, Stack size 40 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Data_To_APP &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2181_uart_tx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[91]"></a>WatchVol</STRONG> (Thumb, 1180 bytes, Stack size 24 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WatchVol &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayus
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_pwm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_pwm
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_adc_sample
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[46]"></a>MissionInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MissionInit
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EulerSetZero
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>MissionLoop</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MissionLoop &rArr; UpdateTelDat &rArr; no_derection_fly &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_To_APP
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSetState
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUpdateMotorPower
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BridClear
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPidLink
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>fgetc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fylib.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fylib.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, fylib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[53]"></a>DelayMs</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fylib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUSetZero
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mpu6881Initial
</UL>

<P><STRONG><a name="[92]"></a>delayus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fylib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
</UL>

<P><STRONG><a name="[96]"></a>DT_Send_Senser</STRONG> (Thumb, 330 bytes, Stack size 96 bytes, fylib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2181_uart_tx
</UL>

<P><STRONG><a name="[5d]"></a>TelDatCheck</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, fylib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TelDatCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>

<P><STRONG><a name="[138]"></a>Fylib_Delays</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fylib.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>Fylib_DelayMs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fylib.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>Fylib_Qrsqrt</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, fylib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Fylib_Qrsqrt &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
</UL>

<P><STRONG><a name="[8b]"></a>Fylib_ConstrainF</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, fylib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Fylib_ConstrainF &rArr; __aeabi_cfrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForAttitude
</UL>

<P><STRONG><a name="[80]"></a>Fylib_Constrain</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fylib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
</UL>

<P><STRONG><a name="[88]"></a>FL_ABS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fylib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_stop
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_modify
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flymode
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[3e]"></a>SystemSoftwareInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemSoftwareInit
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>LedFlash</STRONG> (Thumb, 352 bytes, Stack size 16 bytes, hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LedFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_led_on
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_HANDLER
</UL>

<P><STRONG><a name="[4c]"></a>hw2000_write_reg</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw2000_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_data
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_tx_data
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tx
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTel
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_power_test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_init_250k
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>

<P><STRONG><a name="[9c]"></a>hw2000_read_reg</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw2000_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_data
</UL>

<P><STRONG><a name="[9b]"></a>hw2000_write_fifo</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw2000_write_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_tx_data
</UL>

<P><STRONG><a name="[9d]"></a>hw2000_read_fifo</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hw2000_read_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_data
</UL>

<P><STRONG><a name="[41]"></a>hw2000_port_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw2000_port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>hw2000_init_250k</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hw2000_init_250k &rArr; hw2000_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tx
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>hw2000_tx_data</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = hw2000_tx_data &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_fifo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_irq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_irq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_HANDLER
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tx
</UL>

<P><STRONG><a name="[49]"></a>hw2000_rx_enable</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hw2000_rx_enable &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_irq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_irq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_HANDLER
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_carrier_detect
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tx
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTel
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>

<P><STRONG><a name="[5c]"></a>hw2000_rx_data</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hw2000_rx_data &rArr; hw2000_read_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_read_fifo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_read_reg
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>

<P><STRONG><a name="[58]"></a>radio_carrier_detect</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = radio_carrier_detect &rArr; hw2000_rx_enable &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTel
</UL>

<P><STRONG><a name="[4d]"></a>hw2000_power_test</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, hw2000.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw2000_power_test &rArr; hw2000_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>hr8p506_delay_ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_port_init
</UL>

<P><STRONG><a name="[a2]"></a>hw2181_flash_read</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw2181_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_acc_dataread
</UL>

<P><STRONG><a name="[9f]"></a>iap_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_iappa
</UL>

<P><STRONG><a name="[9e]"></a>erase_iappa</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_enable
</UL>

<P><STRONG><a name="[5a]"></a>enable_irq</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_interrupt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_iappa
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_tx_data
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTel
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>

<P><STRONG><a name="[59]"></a>disable_irq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_iappa
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_tx_data
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTel
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>

<P><STRONG><a name="[a0]"></a>program_iappa</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = program_iappa &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2181_iapop_words_program
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_irq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_acc_datasave
</UL>

<P><STRONG><a name="[47]"></a>gyro_acc_dataread</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gyro_acc_dataread &rArr; hw2181_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2181_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>gyro_acc_datasave</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gyro_acc_datasave &rArr; program_iappa &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_iappa
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUSetZero
</UL>

<P><STRONG><a name="[13a]"></a>iap_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>iap_operation_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>iap_operation_disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>check_flymode</STRONG> (Thumb, 956 bytes, Stack size 24 bytes, altitude.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = check_flymode &rArr; __ARM_scalbnf
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ABS
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
</UL>

<P><STRONG><a name="[a3]"></a>spl0601_start_continuous</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spl0601_start_continuous &rArr; hr8p506_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
</UL>

<P><STRONG><a name="[a4]"></a>spl0601_rateset</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spl0601_rateset &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_read
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
</UL>

<P><STRONG><a name="[a5]"></a>spl0601_get_calib_param</STRONG> (Thumb, 448 bytes, Stack size 24 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spl0601_get_calib_param &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
</UL>

<P><STRONG><a name="[45]"></a>spl0601_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spl0601_init &rArr; spl0601_get_calib_param &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_calib_param
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_start_continuous
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>spl0601_start_temperature</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, baro.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_write
</UL>

<P><STRONG><a name="[a7]"></a>spl0601_start_pressure</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, baro.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_write
</UL>

<P><STRONG><a name="[a8]"></a>spl0601_get_raw_temp</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spl0601_get_raw_temp &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
</UL>

<P><STRONG><a name="[a9]"></a>spl0601_get_raw_pressure</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spl0601_get_raw_pressure &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
</UL>

<P><STRONG><a name="[aa]"></a>spl0601_get_temperature</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spl0601_get_temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
</UL>

<P><STRONG><a name="[ac]"></a>spl0601_get_pressure</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spl0601_get_pressure &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
</UL>

<P><STRONG><a name="[ad]"></a>baro_average_pid</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = baro_average_pid &rArr; ObservationUpdate &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
</UL>

<P><STRONG><a name="[94]"></a>ReadBaro</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, baro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ReadBaro &rArr; baro_average_pid &rArr; ObservationUpdate &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baro_average_pid
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[af]"></a>param_modify</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, altitude1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = param_modify &rArr; initialize_system_parameter &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ABS
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
</UL>

<P><STRONG><a name="[b0]"></a>check_stop</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, altitude1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = check_stop &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ABS
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
</UL>

<P><STRONG><a name="[b3]"></a>altitude_out</STRONG> (Thumb, 426 bytes, Stack size 48 bytes, altitude1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = altitude_out &rArr; alt_target_dis &rArr; __aeabi_fsub
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alt_target_dis
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
</UL>

<P><STRONG><a name="[82]"></a>accel_baro_mag_gps_calculator</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, altitude1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = accel_baro_mag_gps_calculator &rArr; TimeUpdate &rArr; timeUpdate_state &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeUpdate
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_stop
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
</UL>

<P><STRONG><a name="[89]"></a>ahrs_update_R_bf_to_ef</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, altitude1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ahrs_update_R_bf_to_ef &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_modify
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[4a]"></a>initialize_system_parameter</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, state_estimation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = initialize_system_parameter &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2lz
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_modify
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>initialize_state_parameter</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, state_estimation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2lz
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[b9]"></a>timeUpdate_covariance</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, state_estimation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timeUpdate_covariance &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeUpdate
</UL>

<P><STRONG><a name="[bc]"></a>timeUpdate_state</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, state_estimation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = timeUpdate_state &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeUpdate
</UL>

<P><STRONG><a name="[b4]"></a>TimeUpdate</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, state_estimation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TimeUpdate &rArr; timeUpdate_state &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_state
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_covariance
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
</UL>

<P><STRONG><a name="[ae]"></a>ObservationUpdate</STRONG> (Thumb, 364 bytes, Stack size 72 bytes, state_estimation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ObservationUpdate &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2lz
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baro_average_pid
</UL>

<P><STRONG><a name="[13d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_lmul</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_state
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_covariance
</UL>

<P><STRONG><a name="[13f]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[c0]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSoftwareInit
</UL>

<P><STRONG><a name="[140]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPidLink
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_carrier_detect
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGetMirco
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUSetZero
</UL>

<P><STRONG><a name="[144]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
</UL>

<P><STRONG><a name="[147]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[c3]"></a>_dadd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[c6]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[100]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[c7]"></a>_drsb</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[c9]"></a>_ddiv</STRONG> (Thumb, 1076 bytes, Stack size 88 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[c8]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_state
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_state_parameter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[148]"></a>_dfix</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, dfixi.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__aeabi_d2lz</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, dfixl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_d2lz
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_state_parameter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
</UL>

<P><STRONG><a name="[149]"></a>_ll_sfrom_d</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, dfixl.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_To_APP
</UL>

<P><STRONG><a name="[14a]"></a>_dfixu</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_state_parameter
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_stop
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[14b]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[14c]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__aeabi_l2d_normalise</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, dfltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_l2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_l2d</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dfltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_l2d &rArr; __aeabi_l2d_normalise
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_state
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_state_parameter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
</UL>

<P><STRONG><a name="[14d]"></a>_ll_sto_d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dfltl.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__aeabi_ul2d</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dfltl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d_normalise
</UL>

<P><STRONG><a name="[14e]"></a>_ll_uto_d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dfltl.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_state
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_state_parameter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_To_APP
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[14f]"></a>_dmul</STRONG> (Thumb, 578 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__ARM_scalbn</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_To_APP
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[150]"></a>_f2d</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePidParLoop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
</UL>

<P><STRONG><a name="[cf]"></a>_fdiv</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[ce]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ffixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flymode
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
</UL>

<P><STRONG><a name="[151]"></a>_ffix</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ffixi.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__aeabi_f2lz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2lz
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
</UL>

<P><STRONG><a name="[152]"></a>_ll_sfrom_f</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ffixl.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_covariance
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_stop
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alt_target_dis
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flymode
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePidParLoop
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForFall
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
</UL>

<P><STRONG><a name="[153]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flymode
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForFall
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
</UL>

<P><STRONG><a name="[154]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__aeabi_l2f_normalise</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, ffltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_l2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_l2f</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ffltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_l2f &rArr; __aeabi_l2f_normalise
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_covariance
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
</UL>

<P><STRONG><a name="[155]"></a>_ll_sto_f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltl.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_ul2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ffltl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f_normalise
</UL>

<P><STRONG><a name="[156]"></a>_ll_uto_f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltl.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__ARM_scalbnf</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flymode
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Qrsqrt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
</UL>

<P><STRONG><a name="[d3]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[d5]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[d6]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, dcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[d9]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[d4]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[157]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__fpl_cmpreturn</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[d8]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[109]"></a>_dsqrt</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[da]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[159]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15a]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[36]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[db]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[15b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_NMI (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HARDFAULT_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_HARDFAULT (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SVC (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PENDSV_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYSTICK (Weak Reference)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_PENDSV (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PINT0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_PINT0 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PINT1_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_PINT1 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PINT2_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_PINT2 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PINT3_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PINT3_HANDLER &rArr; pint3_handler &rArr; hw2000_rx_data &rArr; hw2000_read_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint3_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PINT4_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint4_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PINT5_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint5_handler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PINT6_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pint6_handler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PINT7_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_PINT7 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>T16N0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_T16N0 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>T16N1_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_T16N1 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>T16N2_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_T16N2 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>T16N3_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_T16N3 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>T32N0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_T32N0 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>T32N1_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_T32N1 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TWDT_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_TWDT (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TRTC_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_RTC (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>KINT_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_KINT (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_ADC (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>LCD_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_LCD (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>UART0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_HANDLER &rArr; INT_UART0
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_UART0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART1_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_UART1 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EUART0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_EUART0 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SPI0 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI1_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SPI1 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C0_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_I2C0 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C1_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_I2C1 (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CCM_HANDLER</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_hr8p506.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_CCM (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hr8p506.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_hr8p506.o(INT))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[101]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rred.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[105]"></a>__ARM_fpclassify</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[ff]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 844 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[102]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[103]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[104]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[106]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[87]"></a>asin</STRONG> (Thumb, 584 bytes, Stack size 80 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = asin &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[108]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 56 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = atan &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[86]"></a>atan2</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[6b]"></a>cos</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
</UL>

<P><STRONG><a name="[6e]"></a>sin</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
</UL>

<P><STRONG><a name="[107]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dlef.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_stop
</UL>

<P><STRONG><a name="[10a]"></a>_dcmple</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dlef.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_covariance
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_modify
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alt_target_dis
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForAttitude
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePidParLoop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
</UL>

<P><STRONG><a name="[10b]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_ConstrainF
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchVol
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
</UL>

<P><STRONG><a name="[10d]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeUpdate_covariance
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBaro
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Qrsqrt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForAttitude
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePidParLoop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize_system_parameter
</UL>

<P><STRONG><a name="[15d]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[7b]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alt_target_dis
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_ConstrainF
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
</UL>

<P><STRONG><a name="[10e]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObservationUpdate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Qrsqrt
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[10f]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alt_target_dis
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAhrsData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePidParLoop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTelDat
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateZ_axis
</UL>

<P><STRONG><a name="[111]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[28]"></a>ReadAcc</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReadAcc &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>ReadGyro</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReadGyro &rArr; hr8p506_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr8p506_i2c_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>ReadTel</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ReadTel &rArr; send_tx &rArr; hw2000_init_250k &rArr; hw2000_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_carrier_detect
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_irq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_irq
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_tx
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_write_reg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw2000_rx_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>ClearPidLink</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearPidLink
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BridClear
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[63]"></a>EulerSetZero</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BridClear
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUSetZero
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionInit
</UL>

<P><STRONG><a name="[61]"></a>IMUSetZero</STRONG> (Thumb, 464 bytes, Stack size 64 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IMUSetZero &rArr; gyro_acc_datasave &rArr; program_iappa &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_acc_datasave
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EulerSetZero
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BridClear
</UL>

<P><STRONG><a name="[65]"></a>BridClear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BridClear &rArr; IMUSetZero &rArr; gyro_acc_datasave &rArr; program_iappa &rArr; enable_irq &rArr; hr8p506_interrupt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUSetZero
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EulerSetZero
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPidLink
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[71]"></a>UpdateZ_axis</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UpdateZ_axis &rArr; __aeabi_fsub
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[79]"></a>UpdateTelDat</STRONG> (Thumb, 2314 bytes, Stack size 64 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = UpdateTelDat &rArr; no_derection_fly &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flymode
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_derection_fly
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[7d]"></a>PowerValueUpdateForFall</STRONG> (Thumb, 1194 bytes, Stack size 24 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PowerValueUpdateForFall
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
</UL>

<P><STRONG><a name="[7e]"></a>UpdatePidParLoop</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UpdatePidParLoop &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForAttitude
</UL>

<P><STRONG><a name="[7f]"></a>UpdateAhrsData</STRONG> (Thumb, 1006 bytes, Stack size 80 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = UpdateAhrsData &rArr; accel_baro_mag_gps_calculator &rArr; TimeUpdate &rArr; timeUpdate_state &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_baro_mag_gps_calculator
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Qrsqrt
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Constrain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[84]"></a>VariableParameterg</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[83]"></a>IMUupdate</STRONG> (Thumb, 1730 bytes, Stack size 64 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = IMUupdate &rArr; ahrs_update_R_bf_to_ef &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahrs_update_R_bf_to_ef
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Qrsqrt
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ABS
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VariableParameterg
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[8a]"></a>PowerValueUpdateForAttitude</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PowerValueUpdateForAttitude &rArr; UpdatePidParLoop &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_ConstrainF
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePidParLoop
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdate
</UL>

<P><STRONG><a name="[8c]"></a>PowerValueUpdate</STRONG> (Thumb, 786 bytes, Stack size 24 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PowerValueUpdate &rArr; PowerValueUpdateForAttitude &rArr; UpdatePidParLoop &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fylib_Constrain
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForAttitude
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerValueUpdateForFall
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[8e]"></a>SystemUpdateMotorPower</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemUpdateMotorPower
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_pwm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_pwm
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[95]"></a>LedSetState</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissionLoop
</UL>

<P><STRONG><a name="[b2]"></a>alt_target_dis</STRONG> (Thumb, 698 bytes, Stack size 24 bytes, altitude1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = alt_target_dis &rArr; __aeabi_fsub
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altitude_out
</UL>

<P><STRONG><a name="[c5]"></a>_dadd1</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[c4]"></a>_dsub1</STRONG> (Thumb, 468 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[110]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[10c]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[f5]"></a>INT_ADC</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_HANDLER
</UL>

<P><STRONG><a name="[fe]"></a>INT_CCM</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_HANDLER
</UL>

<P><STRONG><a name="[f9]"></a>INT_EUART0</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUART0_HANDLER
</UL>

<P><STRONG><a name="[e1]"></a>INT_HARDFAULT</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HARDFAULT_HANDLER
</UL>

<P><STRONG><a name="[fc]"></a>INT_I2C0</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_HANDLER
</UL>

<P><STRONG><a name="[fd]"></a>INT_I2C1</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_HANDLER
</UL>

<P><STRONG><a name="[f4]"></a>INT_KINT</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KINT_HANDLER
</UL>

<P><STRONG><a name="[f6]"></a>INT_LCD</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HANDLER
</UL>

<P><STRONG><a name="[e0]"></a>INT_NMI</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_HANDLER
</UL>

<P><STRONG><a name="[e3]"></a>INT_PENDSV</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PENDSV_HANDLER
</UL>

<P><STRONG><a name="[e5]"></a>INT_PINT0</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT0_HANDLER
</UL>

<P><STRONG><a name="[e6]"></a>INT_PINT1</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT1_HANDLER
</UL>

<P><STRONG><a name="[e7]"></a>INT_PINT2</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT2_HANDLER
</UL>

<P><STRONG><a name="[eb]"></a>INT_PINT7</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT7_HANDLER
</UL>

<P><STRONG><a name="[f3]"></a>INT_RTC</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRTC_HANDLER
</UL>

<P><STRONG><a name="[fa]"></a>INT_SPI0</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_HANDLER
</UL>

<P><STRONG><a name="[fb]"></a>INT_SPI1</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_HANDLER
</UL>

<P><STRONG><a name="[e2]"></a>INT_SVC</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_HANDLER
</UL>

<P><STRONG><a name="[e4]"></a>INT_SYSTICK</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PENDSV_HANDLER
</UL>

<P><STRONG><a name="[ec]"></a>INT_T16N0</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T16N0_HANDLER
</UL>

<P><STRONG><a name="[ed]"></a>INT_T16N1</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T16N1_HANDLER
</UL>

<P><STRONG><a name="[ee]"></a>INT_T16N2</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T16N2_HANDLER
</UL>

<P><STRONG><a name="[ef]"></a>INT_T16N3</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T16N3_HANDLER
</UL>

<P><STRONG><a name="[f0]"></a>INT_T32N0</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T32N0_HANDLER
</UL>

<P><STRONG><a name="[f1]"></a>INT_T32N1</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T32N1_HANDLER
</UL>

<P><STRONG><a name="[f2]"></a>INT_TWDT</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWDT_HANDLER
</UL>

<P><STRONG><a name="[f8]"></a>INT_UART1</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_HANDLER
</UL>

<P><STRONG><a name="[de]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e9]"></a>pint5_handler</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT5_HANDLER
</UL>

<P><STRONG><a name="[ea]"></a>pint6_handler</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT6_HANDLER
</UL>
<HR></body></html>
